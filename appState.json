{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "2f9297f3-540d-4e4f-9641-6cfd67ca7381": {
        "id": "2f9297f3-540d-4e4f-9641-6cfd67ca7381",
        "parent": null,
        "name": "sam1indu",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "33a0d41d-a53a-45e5-a2f2-a6a795ed0ae1",
          "8746b1e7-9cf3-4f6c-a011-f764f6064cec",
          "5d4989be-73a7-4da3-babb-22608bfa6384"
        ],
        "isRemovable": false,
        "filePath": "sam1indu"
      },
      "33a0d41d-a53a-45e5-a2f2-a6a795ed0ae1": {
        "id": "33a0d41d-a53a-45e5-a2f2-a6a795ed0ae1",
        "parent": "2f9297f3-540d-4e4f-9641-6cfd67ca7381",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "sam1indu/lambda.js",
        "code": "let AWS = require('aws-sdk');\nconst s3 = new AWS.S3();\nconst ddb = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = async (event) => {\n    ddb.get({\n        TableName: \"testIndu\",\n        Key: {\n            test: \"1\"\n        }\n    }).promise()\n        .then(data => {\n            console.log(\"dataaa\");\n            s3.listObjects({\n                'Bucket': 'as2-test-lahiru',\n                'MaxKeys': 10,\n                'Prefix': ''\n            }).promise()\n                .then(data => {\n                    console.log(data);           // successful response\n                    console.log(\"pass-s3-ok\");\n\n                    /*\n                    data = {\n                        Contents: [\n                            {\n                               ETag: \"\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\"\",\n                               Key: \"example1.jpg\",\n                               LastModified: \"<Date Representation>\",\n                               Owner: {\n                                  DisplayName: \"myname\",\n                                  ID: \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n                               },\n                               Size: 11,\n                               StorageClass: \"STANDARD\"\n                            },\n                            // {...}\n                        ]\n                    }\n                    */\n                })\n                .catch(err => {\n                    console.log(err, err.stack); // an error occurred\n                    console.log(\"pass-s3-errr\");\n\n                });\n            // your code goes here\n        })\n        .catch(err => {\n            console.log(\"errrrrrrrrrr\");\n            s3.listObjects({\n                'Bucket': 'indunil.trigger',\n                'MaxKeys': 10,\n                'Prefix': ''\n            }).promise()\n                .then(data => {\n                    console.log(data);           // successful response\n                                        console.log(\"errr-s3-ok\");\n\n                    /*\n                    data = {\n                        Contents: [\n                            {\n                               ETag: \"\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\"\",\n                               Key: \"example1.jpg\",\n                               LastModified: \"<Date Representation>\",\n                               Owner: {\n                                  DisplayName: \"myname\",\n                                  ID: \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n                               },\n                               Size: 11,\n                               StorageClass: \"STANDARD\"\n                            },\n                            // {...}\n                        ]\n                    }\n                    */\n                })\n                .catch(err => {\n                    console.log(err, err.stack); // an error occurred\n                                                            console.log(\"errr-s3-errr\");\n\n                });\n            // error handling goes here\n        });\n\n    return { \"message\": \"Successfully executed with DDB\" };\n};",
        "config": {
          "runtime": "nodejs10.x",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [],
        "testCases": {
          "d75da065-ed1b-4183-bb53-1e3345b98653": {
            "id": "d75da065-ed1b-4183-bb53-1e3345b98653",
            "name": "Test event",
            "functionId": "33a0d41d-a53a-45e5-a2f2-a6a795ed0ae1",
            "event": "{\r\n    \"key1\": \"value1\",\r\n    \"key2\": \"value2\",\r\n    \"key3\": \"value3\"\r\n}",
            "eventTemplate": "hello-world"
          }
        }
      },
      "8746b1e7-9cf3-4f6c-a011-f764f6064cec": {
        "id": "8746b1e7-9cf3-4f6c-a011-f764f6064cec",
        "parent": "2f9297f3-540d-4e4f-9641-6cfd67ca7381",
        "name": "pythn.py",
        "type": "PYTHON_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "sam1indu/pythn.py",
        "code": "import boto3\nddb = boto3.client(\"dynamodb\")\n\ndef handler(event, context):\n    try:\n        data = ddb.get_item(\n            TableName=\"testIndu\",\n            Key={\n                'test': {\n                    'S': \"2\"\n                }\n            }\n        )\n    except BaseException as e:\n        print(e)\n        raise(e)\n    \n    return {\"message\": \"Successfully executed\"}\n",
        "config": {
          "runtime": "python3.6",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": []
      },
      "5d4989be-73a7-4da3-babb-22608bfa6384": {
        "id": "5d4989be-73a7-4da3-babb-22608bfa6384",
        "parent": "2f9297f3-540d-4e4f-9641-6cfd67ca7381",
        "name": "__init__.py",
        "type": "PYTHON_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "sam1indu/__init__.py",
        "code": ""
      }
    },
    "rootNode": "2f9297f3-540d-4e4f-9641-6cfd67ca7381",
    "openFiles": [
      "8746b1e7-9cf3-4f6c-a011-f764f6064cec"
    ],
    "currentFileId": "8746b1e7-9cf3-4f6c-a011-f764f6064cec",
    "resources": {
      "ddbtestIndu": {
        "name": "ddbtestIndu",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "operation": "get",
          "table": {
            "arn": "",
            "name": "testIndu",
            "partitionKey": "test",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "payPerRequest": true,
            "mode": 0
          },
          "isGlobalEditMode": false,
          "parameters": {
            "Key": {
              "test": "2"
            },
            "Item": {},
            "ExpressionAttributeValues": {}
          },
          "triggerParams": {},
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        }
      },
      "s3as2TestLahiru": {
        "name": "s3as2TestLahiru",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "as2-test-lahiru"
          }
        }
      },
      "s3induniltrigger": {
        "name": "s3induniltrigger",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "indunil.trigger"
          }
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": null
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      },
      {
        "lambdaId": "8746b1e7-9cf3-4f6c-a011-f764f6064cec",
        "varKey": "PYTHONPATH",
        "varValue": "/var/runtime:/var/task/sam1indu",
        "shouldPersist": true,
        "displayOnly": false,
        "editable": true
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        },
        "boto3": {
          "name": "boto3",
          "language": "python",
          "version": "1.9.6",
          "dev": true,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "sam1indu",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1576475780303
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "sam1indu",
      "url": "https://github.com/Indunil1992/sam1indu"
    }
  }
}